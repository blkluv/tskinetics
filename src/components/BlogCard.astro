---
export interface Props {
  post: any;
  featured?: boolean;
}

const { post, featured = false } = Astro.props;

const formatDate = (date: Date) => {
  return new Intl.DateTimeFormat('en-US', {
    year: 'numeric',
    month: 'short',
    day: 'numeric'
  }).format(date);
};
---

<article class={`group bg-[#1a1a1a] rounded-lg border border-gray-700 overflow-hidden hover:border-purple-500/50 transition-all duration-300 ${featured ? 'md:col-span-2' : ''}`}>
  <!-- Image -->
  {post.data.image && (
    <div class="aspect-video overflow-hidden">
      <img 
        src={post.data.image} 
        alt={post.data.title}
        class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
      />
    </div>
  )}
  
  <!-- Content -->
  <div class="p-6">
    <!-- Tags -->
    {post.data.tags && (
      <div class="flex flex-wrap gap-2 mb-3">
        {post.data.tags.slice(0, 2).map((tag: string) => (
          <span class="bg-purple-600/20 text-purple-400 text-xs px-2 py-1 rounded border border-purple-500/30">
            {tag}
          </span>
        ))}
      </div>
    )}

    <!-- Title -->
    <h3 class="text-xl font-bold mb-2 line-clamp-2">
      <a href={`/blog/${post.slug}`} class="text-white hover:text-purple-400 transition-colors">
        {post.data.title}
      </a>
    </h3>

    <!-- Description -->
    <p class="text-gray-400 mb-4 line-clamp-3 text-sm leading-relaxed">{post.data.description}</p>

    <!-- Metadata -->
    <div class="flex items-center justify-between text-sm text-gray-500">
      <span>By {post.data.author}</span>
      <time datetime={post.data.pubDate.toISOString()}>
        {formatDate(post.data.pubDate)}
      </time>
    </div>
  </div>
</article>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>